server {
    server_name {{ nginx_server_name }};
    root /opt/bitnami/apps/{{ app_name }};

    listen 80;

    location ^~ /.well-known {
        allow all;
        root /opt/bitnami/apps/acme_validation;
    }

# Let's let django do the redirection
#    location / {
#        return 301 https://$host$request_uri;
#    }

# if we are going to let django deal with port 80, in some cases
# then we need this, following ...

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # https://docs.gunicorn.org/en/latest/deploy.html
    keepalive_timeout 5;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://unix:/var/run/gunicorn_{{ app_name }}/socket;
    }

}
server {
    server_name {{ nginx_server_name }};

    # path for static files
    root /opt/bitnami/apps/{{ app_name }};

    listen 443 ssl;

    ssl_certificate      bitnami/certs/{% if use_letsencrypt is defined and use_letsencrypt is sameas true %}{{ nginx_server_name }}{% else %}server{% endif %}.crt;
    ssl_certificate_key  bitnami/certs/{% if use_letsencrypt is defined and use_letsencrypt is sameas true %}{{ nginx_server_name }}{% else %}server{% endif %}.key;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # https://docs.gunicorn.org/en/latest/deploy.html
    keepalive_timeout 5;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://unix:/var/run/gunicorn_{{ app_name }}/socket;
    }

    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #  root /path/to/app/current/public;
    #}

}

# vim: ai et ts=4 sw=4 sts=4 nu
